###################################################################################################
# For use when you need to log into multpile switches with their own unique local user passwords.
# Reads a CSV with hostname,password format for each switch
# CSV Column Headers must be 'Switch' & 'Password', other columns are  ignored 
###################################################################################################

from netmiko import ConnectHandler
import csv

###LOCAL USER NAME FOR THE SWITCHES
username = 'local-username'

#ENABLE THIS LOGGING IF YOU NEED TO TSHOOT
#import logging
#logging.basicConfig(filename='test.log', level=logging.DEBUG)
#logger = logging.getLogger("netmiko")

# Defines Function to Return a dictionary to pass parameters to netmiko
def sw_add(switch, username, password):
    return {'device_type': 'cisco_ios',
            'host': switch,
            'username': username,
            'password': password,
            'secret': password,
            'timeout': 5000.0,
            'session_timeout': 10000.0,
            'session_log_file_mode': 'append',
            'session_log': 'switch.txt', }

# Reads CSV columns containing hostname,password data
with open('switch-hostanmes.csv', mode='r') as csv_file:
        csv_reader = csv.DictReader(csv_file)
        switch_list = []
        for row in csv_reader:
            if not row['Password']: #Skip blank rows
                pass
            else:
                switch_list.append(sw_add(row['Switch'], username, row['Password']))
        switch = (row['Switch'])
        password = (row['Password'])

### Loop to cycle script through each CSV row
for X in switch_list:
    net_connect = ConnectHandler(**X)

# Execute show commands.

    output = net_connect.send_command('wr')
    output = net_connect.send_command('reload',expect_string='[confirm]')
    net_connect.disconnect()
